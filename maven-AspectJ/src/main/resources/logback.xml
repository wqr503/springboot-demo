<?xml version="1.0" encoding="UTF-8"?>
<!-- -->
<configuration scan="true" scanPeriod="60 seconds" debug="false">

    <contextName>logback</contextName>

    <!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径-->
    <property name="LOG_HOME" value="../logs/test"/>
    <!-- <property name="log.max.size" value="100MB" /> 日志文件大小,超过这个大小将被压缩 -->

    <!--<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
    <!--<pattern>${ENCODER_PATTERN}</pattern>-->
    <!--<charset>UTF-8</charset>-->
    <!--</encoder>-->

    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 日志日常打印文件 -->
        <file>logs/mylog.log</file>
        <!-- 配置日志所生成的目录以及生成文件名的规则 在logs/mylog-2017-06-31.0.log.zip -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>logs/mylog-%d{yyyy-MM-dd}.%i.log.zip</fileNamePattern>
            <!-- 如果按天来回滚，则最大保存时间为365天，365天之前的都将被清理掉 -->
            <maxHistory>365</maxHistory>
            <!-- 日志总保存量为10GB -->
            <totalSizeCap>10GB</totalSizeCap>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!--文件达到 最大128MB时会被压缩和切割 -->
                <maxFileSize>128MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>


        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>DEBUG</level>
        </filter>
        <!-- 文件输出的日志 的格式 -->
        <encoder>
            <pattern>
                [ %-5level] [%date{yyyy-MM-dd HH:mm:ss}] %logger{96} -%msg%n
            </pattern>
            <charset>UTF-8</charset> <!-- 此处设置字符集 -->
        </encoder>
        <!-- Safely log to the same file from multiple JVMs. Degrades performance! -->
        <prudent>false</prudent>
    </appender>

    <!--输出到控制台-->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <!-- <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
             <level>ERROR</level>
         </filter>-->
        <encoder>
            <pattern>%d{HH:mm:ss.SSS} %contextName [%thread] [%X{request.uuid}] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

    <!--<appender name="ipTxLog" class="ch.qos.logback.classic.sift.SiftingAppender">-->
    <!--<discriminator>-->
    <!--<key>request.ip</key>-->
    <!--<defaultValue>service</defaultValue>-->
    <!--</discriminator>-->
    <!--<sift>-->
    <!--<appender name="FileLog" class="ch.qos.logback.core.rolling.RollingFileAppender">-->

    <!--<filter class="ch.qos.logback.classic.filter.LevelFilter">-->
    <!--<level>INFO</level>-->
    <!--</filter>-->

    <!--<file>${LOG_HOME}/tx/${request.ip}/server_info.log</file>-->

    <!--<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">-->
    <!--&lt;!&ndash;日志文件输出的文件名&ndash;&gt;-->
    <!--<FileNamePattern>${LOG_HOME}/tx/${request.ip}/history/server_info_%d{yyyy-MM-dd}.%i.log</FileNamePattern>-->
    <!--<maxFileSize>50MB</maxFileSize>-->
    <!--&lt;!&ndash;日志文件保留天数&ndash;&gt;-->
    <!--<MaxHistory>30</MaxHistory>-->
    <!--</rollingPolicy>-->

    <!--<encoder>-->
    <!--<pattern>%date [%level] [%thread] [%X{request.uuid}]  %logger{80} [%file : %line] %msg%n</pattern>-->
    <!--<charset>UTF-8</charset>-->
    <!--</encoder>-->

    <!--</appender>-->
    <!--</sift>-->
    <!--</appender>-->


    <!-- service-error Appender -->
    <appender name="serverErrorLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${LOG_HOME}/server_error.log</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${LOG_HOME}/history/server_error_%d{yyyy-MM-dd}.%i.log</FileNamePattern>
            <maxFileSize>50MB</maxFileSize>
            <!--日志文件保留天数-->
            <MaxHistory>30</MaxHistory>
        </rollingPolicy>

        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>

        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%date [%level] [%thread] [%X{request.uuid}] %logger{80} [%file : %line] %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>

    </appender>


    <!-- service-info Appender -->
    <appender name="serverInfoLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${LOG_HOME}/server_info.log</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${LOG_HOME}/history/server_info_%d{yyyy-MM-dd}.%i.log</FileNamePattern>
            <maxFileSize>50MB</maxFileSize>
            <!--日志文件保留天数-->
            <MaxHistory>30</MaxHistory>
        </rollingPolicy>

        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>

        <!--org.apache.activemq.broker-->

        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%date [%level] [%thread] [%X{request.uuid}] %logger{80} [%file : %line] %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>

    </appender>

    <logger name="org.apache.activemq.broker.BrokerService" level="info" additivity="false">

    </logger>

    <root level="info">
        <appender-ref ref="console"/>
        <appender-ref ref="serverInfoLog"/>
        <appender-ref ref="serverErrorLog"/>
    </root>


    <!--<root level="warn">-->
    <!--<appender-ref ref="file"/>-->
    <!--</root>-->

</configuration>