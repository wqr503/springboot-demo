ext {

    mavenURL = 'http://maven.aliyun.com/nexus/content/groups/public/'

    /**
     * 全局版本
     */
    vers = [
            project     : '1.0',
            jdk         : '8',
            springBoot  : '2.1.5.RELEASE',
            springCloud : 'Greenwich.SR1',
            jwt         : '3.8.1',
            swagger2    : '2.9.2',
            grpc        : '1.20.0',
            protobuf    : '3.6.1',
            grpcStarter : '2.4.0.RELEASE',
            commonsLang3: '3.9',
            commonsCodec: '1.11',
            commonsPool2: '2.6.1',
            redisson    : '3.10.6',
    ]

    /**
     * 全局依赖
     */
    allDependsMap = [
            // spring
            'spring-boot-starter-web'                   : "org.springframework.boot:spring-boot-starter-web",
            'spring-retry'                              : "org.springframework.retry:spring-retry",
            'spring-boot-configuration-processor'       : "org.springframework.boot:spring-boot-configuration-processor",
            'spring-boot-starter-actuator'              : "org.springframework.boot:spring-boot-starter-actuator",
            'spring-boot-starter-data-jpa'              : "org.springframework.boot:spring-boot-starter-data-jpa",
            'spring-cloud-starter-openfeign'            : "org.springframework.cloud:spring-cloud-starter-openfeign",
            'spring-cloud-starter-config'               : "org.springframework.cloud:spring-cloud-starter-config",
            'spring-cloud-starter-netflix-eureka-client': "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client",
            'spring-cloud-starter-netflix-ribbon'       : "org.springframework.cloud:spring-cloud-starter-netflix-ribbon",
            'spring-cloud-starter-zipkin'               : "org.springframework.cloud:spring-cloud-starter-zipkin",
            'spring-boot-starter-data-redis'            : "org.springframework.boot:spring-boot-starter-data-redis",
            'spring-boot-starter-test'                  : "org.springframework.boot:spring-boot-starter-test",
            'spring-boot-starter-security'              : "org.springframework.boot:spring-boot-starter-security",
            'spring-cloud-config-server'                : "org.springframework.cloud:spring-cloud-config-server",
            'spring-cloud-starter-netflix-eureka-server': "org.springframework.cloud:spring-cloud-starter-netflix-eureka-server",
            'spring-cloud-starter-gateway'              : "org.springframework.cloud:spring-cloud-starter-gateway",

            // 杂
            'spring-boot-admin-starter-server'          : "de.codecentric:spring-boot-admin-starter-server:2.1.5",
            'springfox-swagger2'                        : "io.springfox:springfox-swagger2:${vers.swagger2}",
            'springfox-swagger-ui'                      : "io.springfox:springfox-swagger-ui:${vers.swagger2}",
            'mysql-connector-java'                      : "mysql:mysql-connector-java",
            'redisson'                                  : "org.redisson:redisson:${vers.redisson}",
            'kryo-shaded'                               : "com.esotericsoftware:kryo-shaded:4.0.2",
            'grpc-spring-boot-starter'                  : "net.devh:grpc-spring-boot-starter:${vers.grpcStarter}",
            'brave-instrumentation-grpc'                : "io.zipkin.brave:brave-instrumentation-grpc:5.6.3",

            // 工具
            'guava'                                     : "com.google.guava:guava:27.0.1-jre",
            'commons-lang3'                             : "org.apache.commons:commons-lang3:${vers.commonsLang3}",
            'commons-codec'                             : "commons-codec:commons-codec:${vers.commonsCodec}",
            'commons-pool2'                             : "org.apache.commons:commons-pool2:${vers.commonsPool2}",
            'java-jwt'                                  : "com.auth0:java-jwt:${vers.jwt}",
            'freemarker'                                : "org.freemarker:freemarker:2.3.23",

            // javax
            'jaxb-api'                                  : "javax.xml.bind:jaxb-api:2.3.1",
            'javax.annotation-api'                      : "javax.annotation:javax.annotation-api:1.2",
            'activation'                                : "javax.activation:activation:1.1.1",
            'validation-api'                            : "javax.validation:validation-api:2.0.1.Final",
            'jsr311-api'                                : "javax.ws.rs:jsr311-api:1.1.1",
            'jaxb-impl'                                 : "com.sun.xml.bind:jaxb-impl:2.3.2",
            'jaxb-core'                                 : "com.sun.xml.bind:jaxb-core:2.3.0.1",
            'grpc-protobuf'                             : "io.grpc:grpc-protobuf:${vers.grpc}",
            'grpc-stub'                                 : "io.grpc:grpc-stub:${vers.grpc}",
            'grpc-netty-shaded'                         : "io.grpc:grpc-netty-shaded:${vers.grpc}",
    ]

    /**
     * springboot组依赖
     */
    bootDepends = [
            allDependsMap.'spring-boot-starter-web',
            allDependsMap.'spring-retry',
            allDependsMap.'spring-boot-configuration-processor',
            allDependsMap.'spring-boot-starter-actuator',
            allDependsMap.'springfox-swagger2',
            allDependsMap.'springfox-swagger-ui',
    ]

    /**
     * common组依赖
     */
    commonDepends = [
            allDependsMap.'validation-api',
            allDependsMap.'jsr311-api',
            allDependsMap.'validation-api',
            allDependsMap.'guava',
            allDependsMap.'commons-lang3',
            allDependsMap.'commons-codec',
            allDependsMap.'java-jwt',
    ]

    /**
     * springboot-test组依赖
     */
    bootTestDepends = [
            allDependsMap.'spring-boot-starter-test',
    ]

}